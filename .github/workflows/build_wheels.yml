name: Build wheels

on:
  workflow_dispatch:
  workflow_call:
  pull_request:
  push:
    branches:
      - main
      - cibuildwheel

env:
  FORCE_COLOR: 3


jobs:
  generate-wheels-matrix:
    # Used for running all wheels in the matrix in parallel.
    # See: https://iscinumpy.dev/post/cibuildwheel-2-10-0/#only-210
    name: Generate wheels matrix
    runs-on: ubuntu-latest
    outputs:
      include: ${{ steps.set-matrix.outputs.include }}
    steps:
      - uses: actions/checkout@v4
      - name: Install cibuildwheel
        run: pipx install cibuildwheel==2.21.3
      - id: set-matrix
        run: |
          MATRIX=$(
            {
              cibuildwheel --print-build-identifiers --platform linux \
              | jq -nRc '{"only": inputs, "os": "ubuntu-latest"}' \
              && cibuildwheel --print-build-identifiers --platform macos \
              | jq -nRc '{"only": inputs, "os": "macos-13"}' \
              && cibuildwheel --print-build-identifiers --platform macos \
              | jq -nRc '{"only": inputs, "os": "macos-14"}'
            } | jq -sc
          )
          echo "include=$MATRIX" >> $GITHUB_OUTPUT
    env:
      # See: https://cibuildwheel.pypa.io/en/stable/options/#archs
      # Note that macos-13 is an Intel runner, macos-14 is Apple Silicon
      CIBW_ARCHS_LINUX: x86_64 i686
      CIBW_ARCHS_MACOS: native

  build_wheels:
    # name: Build wheels on ${{ matrix.os }}
    name: Build ${{ matrix.only }}
    needs: generate-wheels-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-wheels-matrix.outputs.include) }}
        # # macos-13 is an intel runner, macos-14 is Apple Silicon
        # os: [ubuntu-latest, macos-13, macos-14]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # This is needed in order to fetch version tags from git

      - name: Set MACOSX_DEPLOYMENT_TARGET to the current macOS version
        if: ${{ runner.os == 'macOS' }}
        # Needs to be set or delocate will not work.
        # This is due to FFTW being installed through homebrew
        # See:
        # https://cibuildwheel.pypa.io/en/stable/faq/#missing-dependencies
        # https://github.com/pypa/cibuildwheel/discussions/1926
        # https://github.com/pypa/cibuildwheel/issues/563
        run: |
          export MACOSX_DEPLOYMENT_TARGET=$(sw_vers -productVersion | awk -F '.' '{print $1"."0}')
          echo "MACOSX_DEPLOYMENT_TARGET=${MACOSX_DEPLOYMENT_TARGET}" >> $GITHUB_ENV

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        with:
            only: ${{ matrix.only }}

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl
